import{Clock as e,PerspectiveCamera as t,Scene as i,WebGLRenderer as s,SRGBColorSpace as n,MathUtils as o,Vector2 as r,Color as a,MeshPhysicalMaterial as h,ShaderChunk as c,InstancedMesh as d,Vector3 as l,Object3D as m,FrontSide as p,Mesh as g,PlaneGeometry as f,PointLight as u,LatheGeometry as y,PCFSoftShadowMap as v,Raycaster as w,}from "https://cdn.jsdelivr.net/npm/three@0.170.0/+esm";class x{#e;canvas;camera;cameraMinAspect;cameraMaxAspect;cameraFov;maxPixelRatio;minPixelRatio;scene;renderer;#t;size={width:0,height:0,wWidth:0,wHeight:0,ratio:0,pixelRatio:0};render=this.#i;onBeforeRender=()=>{};onAfterRender=()=>{};onAfterResize=()=>{};#s=!1;#n=!1;isDisposed=!1;#o;#r;#a;#h=new e();#c={elapsed:0,delta:0};#d;constructor(e){(this.#e={...e}),this.#l(),this.#m(),this.#p(),this.resize(),this.#g()}
#l(){(this.camera=new t()),(this.cameraFov=this.camera.fov)}
#m(){this.scene=new i()}
#p(){this.#e.canvas?(this.canvas=this.#e.canvas):this.#e.id?(this.canvas=document.getElementById(this.#e.id)):console.error("Three: Missing canvas or id parameter"),(this.canvas.style.display="block");const e={canvas:this.canvas,powerPreference:"high-performance",...(this.#e.rendererOptions??{})};(this.renderer=new s(e)),(this.renderer.outputColorSpace=n)}
#g(){this.#e.size instanceof Object||(window.addEventListener("resize",this.#f.bind(this)),"parent"===this.#e.size&&((this.#r=new ResizeObserver(this.#f.bind(this))),this.#r.observe(this.canvas.parentNode))),(this.#o=new IntersectionObserver(this.#u.bind(this),{root:null,rootMargin:"0px",threshold:0})),this.#o.observe(this.canvas),document.addEventListener("visibilitychange",this.#y.bind(this))}
#v(){window.removeEventListener("resize",this.#f.bind(this)),this.#r?.disconnect(),this.#o?.disconnect(),document.removeEventListener("visibilitychange",this.#y.bind(this))}
#u(e){(this.#s=e[0].isIntersecting),this.#s?this.#w():this.#x()}
#y(e){this.#s&&(document.hidden?this.#x():this.#w())}
#f(){this.#a&&clearTimeout(this.#a),(this.#a=setTimeout(this.resize.bind(this),100))}
resize(){let e,t;this.#e.size instanceof Object?((e=this.#e.size.width),(t=this.#e.size.height)):"parent"===this.#e.size&&this.canvas.parentNode?((e=this.canvas.parentNode.offsetWidth),(t=this.canvas.parentNode.offsetHeight)):((e=window.innerWidth),(t=window.innerHeight)),(this.size.width=e),(this.size.height=t),(this.size.ratio=e/t),this.#z(),this.#R(),this.onAfterResize(this.size)}
#z(){(this.camera.aspect=this.size.width/this.size.height),this.camera.isPerspectiveCamera&&this.cameraFov&&(this.cameraMinAspect&&this.camera.aspect<this.cameraMinAspect?this.#P(this.cameraMinAspect):this.cameraMaxAspect&&this.camera.aspect>this.cameraMaxAspect?this.#P(this.cameraMaxAspect):(this.camera.fov=this.cameraFov)),this.camera.updateProjectionMatrix(),this.updateWorldSize()}
#P(e){const t=Math.tan(o.degToRad(this.cameraFov/2))/(this.camera.aspect/e);this.camera.fov=2*o.radToDeg(Math.atan(t))}
updateWorldSize(){if(this.camera.isPerspectiveCamera){const e=(this.camera.fov*Math.PI)/180;(this.size.wHeight=2*Math.tan(e/2)*this.camera.position.length()),(this.size.wWidth=this.size.wHeight*this.camera.aspect)}else this.camera.isOrthographicCamera&&((this.size.wHeight=this.camera.top-this.camera.bottom),(this.size.wWidth=this.camera.right-this.camera.left))}
#R(){this.renderer.setSize(this.size.width,this.size.height),this.#t?.setSize(this.size.width,this.size.height);let e=window.devicePixelRatio;this.maxPixelRatio&&e>this.maxPixelRatio?(e=this.maxPixelRatio):this.minPixelRatio&&e<this.minPixelRatio&&(e=this.minPixelRatio),this.renderer.setPixelRatio(e),(this.size.pixelRatio=e)}
get postprocessing(){return this.#t}
set postprocessing(e){(this.#t=e),(this.render=e.render.bind(e))}
#w(){if(this.#n)return;const e=()=>{(this.#d=requestAnimationFrame(e)),(this.#c.delta=this.#h.getDelta()),(this.#c.elapsed+=this.#c.delta),this.onBeforeRender(this.#c),this.render(),this.onAfterRender(this.#c)};(this.#n=!0),this.#h.start(),e()}
#x(){this.#n&&(cancelAnimationFrame(this.#d),(this.#n=!1),this.#h.stop())}
#i(){this.renderer.render(this.scene,this.camera)}
clear(){this.scene.traverse((e)=>{e.isMesh&&"object"==typeof e.material&&(Object.keys(e.material).forEach((t)=>{const i=e.material[t];null!==i&&"object"==typeof i&&"function"==typeof i.dispose&&i.dispose()}),e.material.dispose(),e.geometry.dispose())}),this.scene.clear()}
dispose(){this.#v(),this.#x(),this.clear(),this.#t?.dispose(),this.renderer.dispose(),(this.isDisposed=!0)}}
const z=new Map(),R=new r();let P=!1;function b(e){const t={position:new r(),nPosition:new r(),hover:!1,onEnter(){},onMove(){},onClick(){},onLeave(){},...e};return((function(e,t){z.has(e)||(z.set(e,t),P||(document.body.addEventListener("pointermove",M),document.body.addEventListener("pointerleave",A),document.body.addEventListener("click",C),(P=!0)))})(e.domElement,t),(t.dispose=()=>{var t;(t=e.domElement),z.delete(t),0===z.size&&(document.body.removeEventListener("pointermove",M),document.body.removeEventListener("pointerleave",A),(P=!1))}),t)}
function M(e){(R.x=e.clientX),(R.y=e.clientY);for(const[e,t]of z){const i=e.getBoundingClientRect();S(i)?(L(t,i),t.hover||((t.hover=!0),t.onEnter(t)),t.onMove(t)):t.hover&&((t.hover=!1),t.onLeave(t))}}
function C(e){(R.x=e.clientX),(R.y=e.clientY);for(const[e,t]of z){const i=e.getBoundingClientRect();L(t,i),S(i)&&t.onClick(t)}}
function A(){for(const e of z.values())e.hover&&((e.hover=!1),e.onLeave(e))}
function L(e,t){const{position:i,nPosition:s}=e;(i.x=R.x-t.left),(i.y=R.y-t.top),(s.x=(i.x/t.width)*2-1),(s.y=(-i.y/t.height)*2+1)}
function S(e){const{x:t,y:i}=R,{left:s,top:n,width:o,height:r}=e;return t>=s&&t<=s+o&&i>=n&&i<=n+r}
class I extends h{constructor(e){super(e);(this.uniforms={thicknessDistortion:{value:0.1},thicknessAmbient:{value:0},thicknessAttenuation:{value:0.1},thicknessPower:{value:2},thicknessScale:{value:10}}),(this.defines.USE_UV=""),(this.onBeforeCompile=(e)=>{Object.assign(e.uniforms,this.uniforms),(e.fragmentShader="\n        uniform float thicknessPower;\n        uniform float thicknessScale;\n        uniform float thicknessDistortion;\n        uniform float thicknessAmbient;\n        uniform float thicknessAttenuation;\n      "+e.fragmentShader),(e.fragmentShader=e.fragmentShader.replace("void main() {","\n        void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, inout ReflectedLight reflectedLight) {\n          vec3 scatteringHalf = normalize(directLight.direction + (geometryNormal * thicknessDistortion));\n          float scatteringDot = pow(saturate(dot(geometryViewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\n          #ifdef USE_COLOR\n            vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * vColor;\n          #else\n            vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * diffuse;\n          #endif\n          reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\n        }\n\n        void main() {\n      "));const t=c.lights_fragment_begin.replaceAll("RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );","\n          RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n          RE_Direct_Scattering(directLight, vUv, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, reflectedLight);\n        ");(e.fragmentShader=e.fragmentShader.replace("#include <lights_fragment_begin>",t)),this.onBeforeCompile2&&this.onBeforeCompile2(e)})}}
const{randFloatSpread:O,smoothstep:k}=o,E={type:"triangle",n:50,padding:0.1,light1Color:16777215,light1Intensity:1e3,light1PositionZ:10,light2Color:16711680,light2Intensity:500,light2PositionZ:-10,planeColor:2105376,colors:[255,2105376,16777215],materialParams:{metalness:0.8,roughness:0.5,clearcoat:1,clearcoatRoughness:0.1},timeCoef:0.5,depthScale:2.5,influenceRadius1:10,influenceRadius2:20,};class D extends d{#b;#c=0;#M;#C;#A;pointerPosition=new l();tilt=new l();#L=new m();#S=new r();#I=new a();constructor(e,t){const i={...E,...t};let s;"triangle"===i.type?((s=3),(i.width=100/(i.n/2+0.5)),(i.height=Math.sin(Math.PI/3)*i.width),(i.radius=(0.5*i.width)/Math.cos(Math.PI/6)),(i.nx=i.n),(i.ny=Math.floor((3*i.n)/5))):"square"===i.type?((s=4),(i.width=100/i.n),(i.height=100/i.n),(i.radius=0.5*i.width),(i.nx=i.n),(i.ny=Math.floor(2*i.n))):((s="hexagon"===i.type?6:24),(i.radius=50/i.n),(i.nx=i.n),(i.ny=i.n));const n=(function(e,t,i,s=0,n=0,o=6){const a=[];a.push(new r(t,-i/2));for(let e=0;e<o;e++){const h=t-s+Math.cos(((e/(o-1))*Math.PI)/2)*s,c=i/2-n+Math.sin(((e/(o-1))*Math.PI)/2)*n;a.push(new r(h,c))}
a.push(new r(0,i/2));const h=new y(a,e);return h.translate(0,-i/2,0),h.rotateX(Math.PI/2),h})(s,i.radius,10*i.radius,0.125*i.radius,0.125*i.radius);super(n,new I({...i.materialParams,flatShading:"circle"!==i.type,side:p}),i.nx*i.ny),(this.#b=e),(this.config=i),(this.#C=this.#O()),(this.#A=new Float32Array(this.count).fill(0).map(()=>O(2*Math.PI))),this.#k(),(this.castShadow=!0),(this.receiveShadow=!0),this.setColors(i.colors),(this.plane=new g(new f(100,100),new I({color:i.planeColor,...i.materialParams,side:p}))),(this.plane.receiveShadow=!0),(this.plane.position.z=-0.15),this.add(this.plane)}
#k(){const e=new u(this.config.light1Color,this.config.light1Intensity);(e.positionZ=this.config.light1PositionZ),(e.castShadow=!0),(e.shadow.mapSize.width=1024),(e.shadow.mapSize.height=1024),(this.light1=e),this.add(this.light1);const t=new u(this.config.light2Color,this.config.light2Intensity);(t.positionZ=this.config.light2PositionZ),(this.light2=t),this.add(this.light2)}
#O(){return"triangle"===this.config.type?(function({nx:e,ny:t,width:i,height:s,radius:n}){const o=i/2,r=s,a=(-e/2)*o+o/2,h=(-t/2)*r+r/2;return F({nx:e,ny:t},(e,t)=>({x:a+e*o,y:h+t*r+0.5*(t%2?-1:1)*(s-n)+(e%2)*(t%2?1:-1)*(2*n-s),rotZ:(((e+(t%2))%2)*Math.PI)/3}))})(this.config):"square"===this.config.type?(function({nx:e,ny:t,width:i,height:s}){const n=i,o=s/2,r=(-e/2)*n+n/4,a=(-t/2)*o+o/2;return F({nx:e,ny:t},(e,t)=>({x:r+e*n+((t%2)/2)*n,y:a+t*o,rotZ:0}))})(this.config):"hexagon"===this.config.type?(function({nx:e,ny:t,radius:i}){const s=Math.cos(Math.PI/6)*i*2,n=1.5*i,o=(-e/2)*s+s/4,r=(-t/2)*n+n/2;return F({nx:e,ny:t},(e,t)=>({x:o+e*s+((t%2)/2)*s,y:r+t*n,rotZ:0}))})(this.config):(function({nx:e,ny:t,radius:i}){const s=2*i,n=Math.sin(Math.PI/3)*s,o=(-e/2)*s+s/4,r=(-t/2)*n+n/2;return F({nx:e,ny:t},(e,t)=>({x:o+e*s+((t%2)/2)*s,y:r+t*n,rotZ:0}))})(this.config)}
#E(){const{nx:e,ny:t,depthScale:i,padding:s,influenceRadius1:n,influenceRadius2:o}=this.config;for(let r=0;r<e;r++)
for(let e=0;e<t;e++){const a=r*t+e,h=this.#C[a],c=this.#S.set(h.x,h.y).sub(this.pointerPosition).length(),d=(1-k(c,n,o))*k(c,0,n),l=0.5*(Math.cos(this.#A[a]+this.#c)+1);(this.#L.position.x=h.x),(this.#L.position.y=h.y),(this.#L.position.z=l*i*d-0.1),(this.#L.rotation.z=h.rotZ);const m=1-s;this.#L.scale.set(m,m,1),this.#L.updateMatrix(),this.setMatrixAt(a,this.#L.matrix),this.#I.copy(this.plane.material.color).lerp(this.#M[a],k(this.#L.position.z,0,i/2)),this.setColorAt(a,this.#I)}(this.instanceMatrix.needsUpdate=!0),(this.instanceColor.needsUpdate=!0)}
setColors(e){if(((this.#M=new Array(this.count).fill(0).map(()=>new a())),Array.isArray(e)&&e.length>1)){const t=(function(e){let t,i;return(s(e),{setColors:s,getColorAt:function(e,s=new a()){const n=Math.max(0,Math.min(1,e))*(t.length-1),o=Math.floor(n),r=i[o];if(o>=t.length-1)return r.clone();const h=n-o,c=i[o+1];return(s.r=r.r+h*(c.r-r.r)),(s.g=r.g+h*(c.g-r.g)),(s.b=r.b+h*(c.b-r.b)),s},});function s(e){(t=e),(i=[]),t.forEach((e)=>{const t=new a(e);i.push(t)})}})(e);for(let e=0;e<this.count;e++)t.getColorAt(Math.random(),this.#M[e]);}}
resize(){this.#b.size.ratio>1?((this.scale.x=(this.#b.size.wWidth/100)*1.6),(this.scale.y=this.scale.x)):((this.scale.y=(this.#b.size.wHeight/100)*1.6),(this.scale.x=this.scale.y))}
update(e){(this.#c+=e.delta*this.config.timeCoef),this.light1.position.set(this.pointerPosition.x,this.pointerPosition.y,this.light1.positionZ),this.light2.position.set(this.pointerPosition.x,this.pointerPosition.y,this.light2.positionZ),this.#E()}}
function F({nx:e,ny:t},i){const s=new Array(e*t).fill(0);for(let n=0;n<e;n++)
for(let e=0;e<t;e++){s[n*t+e]=i(n,e)}
return s}
function V(e,configOverrides={}){const defaultConfig={type:"triangle",n:50,padding:0.1,light1Color:16777215,light1Intensity:1e3,light1PositionZ:10,light2Color:16711680,light2Intensity:500,light2PositionZ:-10,planeColor:2105376,colors:[255,2105376,16777215],materialParams:{metalness:0.8,roughness:0.5,clearcoat:1,clearcoatRoughness:0.1},timeCoef:0.5,depthScale:2.5,influenceRadius1:10,influenceRadius2:20,};const config={...defaultConfig,...configOverrides};const i=new x({canvas:e,size:"parent",rendererOptions:{antialias:!0}});(i.cameraMaxAspect=5/3),(i.camera.position.z=30),(i.camera.position.y=-25),i.camera.lookAt(0,0,-10),i.updateWorldSize(),(i.renderer.shadowMap.enabled=!0),(i.renderer.shadowMap.type=v);const s=new D(i,config);i.scene.add(s);const n=new w(),o=new l(),r=(e=0,t=0)=>{n.setFromCamera({x:e,y:t},i.camera);const r=n.intersectObject(s.plane,!1);r.length>0&&(o.copy(r[0].point),(o.x/=s.scale.x),(o.y/=s.scale.y))},a=b({domElement:e});return((a.onMove=()=>{r(a.nPosition.x,a.nPosition.y)}),(a.onLeave=()=>{r()}),(i.onBeforeRender=(e)=>{s.pointerPosition.lerp(o,0.05),s.update(e)}),(i.onAfterResize=()=>{s.resize(),a.hover||(r(),s.pointerPosition.copy(o))}),{three:i,grid:s,dispose(){a.dispose(),i.dispose()},})}
export{V as default}